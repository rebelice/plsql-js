{"version":3,"file":"ArrayType.js","sourceRoot":"","sources":["../../src/ArrayType.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAEH,mCAAyD;AAEzD,6CAA0C;AAE1C,MAAa,SAAU,SAAQ,uBAAU;IAErB,WAAW,CAAQ;IACnB,IAAI,CAAS,CAAC,uBAAuB;IAE7C,aAAa,CAAgB;IAErC,YAAmB,IAAY,EAAE,aAA4B,EAAE,QAAe,EAAE,IAAI,GAAG,CAAC;QACpF,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,IAAW,SAAS,KAAc,OAAO,EAAE,CAAC,CAAC,CAAC;IAC9C,IAAW,IAAI,KAAe,OAAO,gBAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IACtD,IAAW,SAAS,KAAoB,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;CACvE;AAjBD,8BAiBC","sourcesContent":["/*\n * Copyright (c) Mike Lischke. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { IType, ReferenceKind, TypeKind } from \"./types\";\n\nimport { BaseSymbol } from \"./BaseSymbol\";\n\nexport class ArrayType extends BaseSymbol implements IType {\n\n    public readonly elementType: IType;\n    public readonly size: number; // > 0 if fixed length.\n\n    private referenceKind: ReferenceKind;\n\n    public constructor(name: string, referenceKind: ReferenceKind, elemType: IType, size = 0) {\n        super(name);\n        this.referenceKind = referenceKind;\n        this.elementType = elemType;\n        this.size = size;\n    }\n\n    public get baseTypes(): IType[] { return []; }\n    public get kind(): TypeKind { return TypeKind.Array; }\n    public get reference(): ReferenceKind { return this.referenceKind; }\n}\n"]}